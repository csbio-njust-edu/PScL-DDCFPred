% feature-selection-mRMR
% Created by Jiahong K. Chen

% Input: 
%       dataX n-by-p, n is #observation, p is dim of feature
%       dataC n-by-1, the class of observations
%       nMRMR       , dimension of feature subspace generated by mRMR
%       classifier  , 'NB' or 'LDA'
% Output: candidate feature set

function obj = findCandidateFeature(obj, nMRMR, classifier, errThres, kFold)

if nargin == 1
    nMRMR       = obj.nMRMR;
    classifier  = obj.classifier;
    errThres    = obj.errThres;
    kFold       = obj.kFold;
end

mrmrFea = MLpkg.featureSelection.mRMR(obj.dataX, obj.dataC, nMRMR);

meanErr = zeros(nMRMR, 1);
varErr  = zeros(nMRMR, 1);
mt2Err  = zeros(nMRMR, 1);

for Sid = 1 : nMRMR

    feaIdx = mrmrFea(1:Sid);
    [meanErr(Sid) ,varErr(Sid), mt2Err(Sid)] = ...
        cvErrEst(obj.dataX(:,feaIdx), obj.dataC, classifier, kFold);

end

goodIdx         = find(mt2Err < errThres);

[~, greatIdx ]  = min( meanErr(goodIdx) );

obj.candiFea    = mrmrFea( 1 : goodIdx(greatIdx) );
obj.mrmrFea     = mrmrFea;

obj.nMRMR       = nMRMR;
obj.classifier  = classifier;
obj.errThres    = errThres;
obj.kFold       = kFold;

end